:orphan:

=============
Robocop 3.1.0
=============

<Release description>

You can install the latest available version by running

::

    pip install --upgrade robotframework-robocop

or to install exactly this version

::

    pip install robotframework-robocop==3.1.0

.. contents::
   :depth: 2
   :local:

Most important changes
======================

Change title (#0)
-----------------------------------------------

Description

Rule changes
============

Rules W0310 and W0309 now handle nested variables (#678)
------------------------------------------------------------------------------------------

Rules W0310 ``non-local-variables-should-be-uppercase`` and W0309 ``section-variable-not-uppercase``
were previously reporting when the variable had another nested variable with lowercase name,
e.g. `${EXAMPLE_${lowercase}}`.
Now, the nested variable names passed as an argument to one of the keywords `Set Test Variable`,
`Set Suite Variable` or `Set Global Variable` are ignored and if the rest of the name is uppercase, the rules
will not report the issue anymore.
For variables in Variables section, the name still needs to be all uppercase (including
nested variable), because all nested variables in this section need to be global anyway.

New rule for detecting unreachable code (#810)
----------------------------------------------

Added new rule W0917 ``unreachable-code`` for detecting if there is a code after
``RETURN``, ``BREAK`` or ``CONTINUE`` statements, on the same scope level.

For example::

    Example Keyword
        FOR    ${animal}    IN    cat    dog
            IF    '${animal}' == 'cat'
                CONTINUE
                Log  ${animal}  # unreachable log
            END
            BREAK
            Log    Unreachable log
        END
        RETURN
        Log    Unreachable log

Also, old W0901 ``keyword-after-return`` rule no longer detects ``RETURN`` statements,
only the keywords after ``Return From Keyword`` and when there is code after ``[Return]``.

New rule that reports when inline IF is split into multiple lines (#804)
------------------------------------------------------------------------

New W0918 ``multiline-inline-if`` rule that detects when inline IF is split into
multiple lines. It's allowed, but it should be avoided, since it decreases readability.
It recommends to use normal IF/ELSE instead.

Other features
==============

Feature title (#0)
--------------------------------

Description

Acknowledgements
================

Thanks to...
