:orphan:

=============
Robocop 3.3.0
=============

Description.

You can install the latest available version by running

::

    pip install --upgrade robotframework-robocop

or to install exactly this version

::

    pip install robotframework-robocop==3.3.0

.. contents::
   :depth: 2
   :local:

Rule changes
============

New rule for detecting not supported settings in resource files (#827)
----------------------------------------------------------------------

According to the official RF User Guide::

    "Setting section in resource files can contain only import settings (Library, Resource, Variables)
    and Documentation. The Variable section and Keyword section are used exactly the same way
    as in test case files."

New E0416 ``invalid-setting-in-resource`` rule detects unsupported
settings in resource files.

New rule that suggests using task- or test-related settings for corresponding sections (#522)
---------------------------------------------------------------------------------------------

If the file contains ``*** Task ***`` section, it is recommended to use settings like ``Task Setup``,
``Task Teardown``, ``Task Template``, ``Task Tags`` and ``Task Timeout`` instead of their `Test` variants.
Similarly, use test-related settings when using ``*** Test Cases ***`` section.

A new rule W0326 ``mixed-task-test-settings`` is introduced to cover these cases.

Other features
==============

New ``enabled`` rule parameter used to create rules disabled by default (#809)
------------------------------------------------------------------------------

Previously, all defined rules were enabled by default and could be disabled using ``--exclude`` option (or by
using ``--include`` if not listed with the option). It is now possible to create a rule disabled by default using
new parameter, ``enabled``::

    rules = {
        "1155": Rule(
            rule_id="1155",
            name="custom-rule",
            msg="Custom rule message",
            severity=RuleSeverity.INFO,
            enabled=False,
            docs="""
            Custom rule description.
            """,
        )
    }

Such rules can be enabled when called explicitly with ``--include`` option::

    robocop --include custom-rule .

 or by configuring ``enabled`` parameter directly::

    robocop --ext-rules custom_rules.py -c custom-rule:enabled:True .

Reports refactor (#834)
-----------------------

Our internal reports structure was refactored to make it easier to maintain and develop it in the future. Now,
each report is stored in a separate file in Robocop project. From the user's perspective, reports should work
the same as before.

Acknowledgements
================

Thanks to...
