=============
Robocop 6.8.0
=============

Unused disabler rule (#1312)
----------------------------

A new rule ``unused-disabler`` (MISC15) has been added to detect Robocop disabler directives (such as ``# noqa`` or
``# robocop: off``) that are not being used. This typically occurs when:

- A code violation is fixed but the disabler is not removed
- A rule is disabled globally, making local disablers redundant
- Multiple overlapping disablers are present

Improved comment handling in SplitTooLongLine formatter (#1444)
---------------------------------------------------------------

The ``SplitTooLongLine`` formatter now has better comment handling.

**Previous behavior:**

When formatting keyword call or ``VAR`` by ``SplitTooLongLine`` formatter, comments were moved above the statement,
for example::

    Long Keyword That Will Be Split    multiple   args  # comment

was formatted to::

    # comment
    Long Keyword That Will Be Split
    ...    multiple
    ...    args

This caused unindented effect where robocop disabler directives (e.g. ``# robocop: off``) were also moved above the
statement and no longer applied correctly.

**New behavior:**

Comments are now kept on the first line of the split statement::

    Long Keyword That Will Be Split  # comment
    ...    multiple
    ...    args

This ensures that disablers and other comments remain associated with the correct statement.

Disablers discoverable anywhere in comments
-------------------------------------------

Disabler directives can now be placed anywhere within a comment, not just at the beginning.

**Previous behavior:**

Only the first disabler at the start of a comment was recognized::

    # only robocop: off=some-rule is recognized
    Keyword Call  # robocop: off=some-rule robocop: fmt: off

    # only noqa is recognized
    Keyword Call  # noqa robocop fmt: off

    # nothing is recognized
    Keyword Call  # TODO: robocop: off

**New behavior:**

All disablers are now recognized regardless of their position in the comment. Additionally, the syntax is more
flexible - rules can be separated by commas with or without spaces::

    # Both formats are now valid:
    # robocop: off=rule1,rule2
    # robocop: off=rule1, rule2


Fixes
======

Overwrite mode not working from configuration file (#1478)
----------------------------------------------------------

Fixed an issue where the ``overwrite`` mode was not being applied when specified in the configuration file. The
following configuration now works correctly::

    [tool.robocop.format]
    overwrite = false

Rules url pointed to non-existing location (#1481)
--------------------------------------------------

Rules urls (such as SARIF helpUri, or diagnostic message urls) were pointing to non-existent locations after a
documentation refactor. URLs now correctly point to:

https://robocop.readthedocs.io/en/v{version}/rules/rules_list.html#{rule-name} .

Line too long rule reporting lines with new disablers
-----------------------------------------------------

New disabler directives (``robocop: fmt: off`` and ``fmt: off``) were not ignored by ``line-too-long`` rule.

From now on, together with other disablers, comments with disablers will be ignored when checking line length.
